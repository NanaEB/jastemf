«IMPORT ecore»
«EXTENSION org::jastemf::converter::ecore::ecore»

«REM»
This transformation converts ecore models into the textual specification 
language of JastAdd.  

Status:
- tree structure with only single inheritance and no interface declartions
can be converted into ast spec
- no jrag skeleton is generated yet

Error markers in the OAW editor can be ignored, they result from a bug in 
the editor 

@author Sven Karol
«ENDREM»


«DEFINE Main FOR EPackage-»
	«FILE name+".ast"-»
/**
 * Spanning tree for ecore package «name». 
 *
 * Generated by JastEMF [«timeStamp()»]
 */
		«EXPAND astConcept FOREACH eClassifiers-»
	«ENDFILE-»
«ENDDEFINE»

«DEFINE astConcept FOR EClassifier-»«ENDDEFINE»

«DEFINE astConcept FOR EClass-»
«IF abstract==true-»
«"abstract "-» 
«EXPAND definitionBody-»
;
«ELSE-»
«EXPAND definitionBody-»
;
«ENDIF-»
«ENDDEFINE»

«DEFINE definitionBody FOR EClass-»
«name-»
«IF !eSuperTypes.isEmpty-»
:«eSuperTypes.get(0).name-»
«ENDIF-»
«IF !(eContainments(this).isEmpty && eAttributes.isEmpty)-»
 ::=«EXPAND nodeLeafs FOREACH eAttributes.select(e|!(e.derived))-»«EXPAND nodeContainments FOREACH eContainments(this)-»
«ENDIF-»
«ENDDEFINE»

«DEFINE nodeLeafs FOR EAttribute-»
 <«name-»:«eType.instanceTypeName»«">"-»
«ENDDEFINE»

«DEFINE nodeContainments FOR EReference-»
«LET name + ":" + eReferenceType.name AS decl-»
«IF lowerBound==0&&upperBound==1-»
 [«decl-»«"]"-»
«ELSEIF lowerBound==1&&upperBound==1-»
 «decl-»
«ELSEIF upperBound>1||upperBound==-1-»
 «decl-»«"*"-»	
«ENDIF-»
«ENDLET-»
«ENDDEFINE»
