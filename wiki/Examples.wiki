#summary JastEMF examples.
#labels Featured

= List of the SVN's JastEMF Examples =

In the following we shortly summarise the example [Approach#Integration_Projects integration projects] included in JastEMF's source code repository. Each example is a separate Java project within the SVN's _"jastemf-examples"_ folder. There is no special configuration overhead required to build and execute the examples, except the usual one to execute Ant build scripts in the same JRE in which Eclipse is executed (We assume that JastEMF is correctly [Installation installed]).

== SIPLE (Simple Imperative Programming Language Example) ==

SIPLE is a simple imperative programming language. Its language concepts are:
 * Integer, real and Boolean arithmetics
 * `While` and `If` control-flow statements
 * Nested procedures
 * A block-structured name space
 * A save interpreter, that calmly terminates in the presence of errors
SIPLE is strongly typed, such that a static type analysis can be performed. Throughout the example we use different specification-driven compiler construction approaches to generate complete language toolings --- from the lexer over syntactic and static semantic analysis to interpreters and editors --- for SIPLE.

Example Objectives:
 * To show, how JastEMF can be used to generate a SIPLE EMF metamodel implementation with appropriate static and execution semantics.
 * To show, how EMF standard editors can be used to create SIPLE program models and the benefits of integrated model semantics.
 * To show, how other EMF tools can benefit from such semantic metamodel implementations by the example of [http://www.emftext.org EMFText] --- a text to model parser generator.

Details and a tutorial for the example can be found [SIPLE here].